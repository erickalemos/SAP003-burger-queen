{"version":3,"sources":["firebase.js","menu.js","components/button.js","components/input.js","pages/Restaurant.js","components/logo.js","components/Nav.js","pages/Kitchen.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Menu","useState","data","setDatas","useEffect","firestore","collection","get","then","snapshot","newDatas","docs","map","doc","Button","props","onClick","className","Name","Price","title","type","Input","placeholder","text","value","onChange","Restaurant","Menuitems","coffeebreak","filter","item","breakfast","lunch","order","setOrder","menu","setMenu","setName","table","setTable","addOrder","index","findIndex","itemNumber","quantity","total","reduce","accumulator","class","e","target","indexItem","i","filterDel","splice","deletOrder","length","add","status","timestamp","FieldValue","serverTimestamp","Swal","fire","icon","showConfirmButton","timer","Logo","src","Nav","to","Order","setData","processing","setProcessing","pending","done","received","onSnapshot","id","updateStatus","newStatus","statusFilter","update","elem","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.394d3940.chunk.js","sourcesContent":["   import firebase from 'firebase/app'; \n   import 'firebase/firestore';\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDFu7wII6Reoj8CDbryoadIRR9YpJRsGQU\",\n        authDomain: \"burger-queen-e2837.firebaseapp.com\",\n        databaseURL: \"https://burger-queen-e2837.firebaseio.com\",\n        projectId: \"burger-queen-e2837\",\n        storageBucket: \"burger-queen-e2837.appspot.com\",\n        messagingSenderId: \"633316136467\",\n        appId: \"1:633316136467:web:c178da27d83882e8ddd1e6\",\n        measurementId: \"G-PV2M0L0L2B\"\n    };\n\n    firebase.initializeApp(firebaseConfig);\n\n    export default firebase;","import {useEffect, useState} from 'react';\n\nimport firebase from './firebase';\n\nfunction Menu() {\n  const [data, setDatas ]= useState([]);\n  useEffect (()=> { firebase.firestore().collection('menu').get()\n    .then((snapshot) => {\n      const newDatas = snapshot.docs.map((doc) => ({\n        ...doc.data()\n      }))\n      setDatas(newDatas)\n    })\n  },[])\n  return data\n}\n\nexport default Menu;","\nimport React from \"react\";\nimport '../App.css';\n\nfunction Button (props) {\n  return( \n  <>\n    <section>\n      <button \n        onClick={() => props.onClick(props)}\n        className={props.className}>\n          <p>{props.Name}</p>\n          <p>{props.Price}</p>\n          <p>{props.title}</p>\n          <p>{props.type}</p>\n      </button>\n    </section>\n  </>\n  )\n}\n\nexport default Button;","import React from 'react';\n\nfunction Input(props) {\n    return (\n        \n        <input \n            className={props.className}\n            placeholder={props.placeholder}\n            text={props.text}\n            value={props.value} onChange={props.onChange}>     \n        </input>\n        \n    )\n}\n\nexport default Input;","import React, {useState} from 'react';\nimport Menu from '../menu';\nimport Button from '../components/button';\nimport Input from '../components/input';\nimport '../App.css';\nimport firebase from '../firebase';\nimport Swal from 'sweetalert2';\n\nconst Restaurant = () => {\n    const Menuitems = Menu();\n    const coffeebreak = Menuitems.filter(item=>item.breakfast);\n    const lunch = Menuitems.filter(item=>!item.breakfast);\n    const [order, setOrder] = useState([]);\n    const [menu, setMenu] = useState([]);\n    const [Name, setName] = useState([]);\n    const [table, setTable] = useState([]);\n    \n    const addOrder = (item) =>{ \n        const index = order.findIndex(itemNumber => itemNumber.Name === item.Name);\n        if (index === -1){\n            setOrder([...order, {...item, quantity: 1}]);\n        }else{\n            order[index].quantity += 1;\n            setOrder([...order]);\n        }\n    }\n\n    const deletOrder = (item) => {\n        const indexItem = order.findIndex(i=> i.Name === item.Name);\n        const filterDel = order.filter(i=> i.Name !== item.Name);          \n        if(order[indexItem].quantity === 1){\n            order.splice(indexItem, 1);\n            setOrder([...filterDel])\n        }else{\n            order[indexItem].quantity-=1;\n            setOrder([...order]);\n        }     \n    }\n\n    const total = order.reduce((accumulator, item) => accumulator + (item.Price*item.quantity),0);\n\n    function sendOrder() {\n    if(order.length && table.length && Name.length) {\n        firebase.firestore().collection('orders')\n        .add({\n            Name,\n            table, \n            order,\n            status:'Pendente',\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()})\n        .then( \n            Swal.fire({\n                icon: 'success',\n                title: 'Pedido enviado com sucesso!',\n                showConfirmButton: false,\n                timer: 1500\n            }),\n        setName(''),\n        setTable(''),\n        setOrder([]) \n         )} else if(order.length === 0){\n        Swal.fire({\n            icon: 'error',\n            title: 'Selecione ao menos um item!',\n            showConfirmButton: false,\n            timer: 1500\n        })\n    } else if(Name.length === 0){\n        Swal.fire({\n            icon: 'warning',\n            title: 'Digite o nome do cliente',\n            showConfirmButton: false,\n            timer: 1500\n        })\n    } else if(table.length === 0){\n        Swal.fire({\n            icon: 'error',\n            title: 'Digite o n° da mesa',\n            showConfirmButton: false,\n            timer: 1500\n        })\n    } \n    }   \n    \n    return (\n        <>\n            <main className='container-restaurant'>\n                <div className='box-items'>\n                    <div className='bt-menutype'>\n                        <h3>Menu</h3>\n                        <div className='container-restaurant '>\n                            <Button Name='Café da Manhã' className='bt-menu' onClick={()=> setMenu([...coffeebreak])} />\n                            <Button Name='Resto do Dia' className='bt-menu' onClick={()=> setMenu([...lunch])} />\n                        </div>\n                    </div>\n                    <div className = 'button-Itemsmenu'>\n                        \n                    <div class=\"drink flex\">{menu.map(item => item.type === \"drink\"? \n                        <Button className='bt bt-Itemsmenu' Name={item.Name} Price={item.Price} onClick ={() => addOrder(item)} />:false \n                    )}</div>\n                    <div class=\"extra flex\">{menu.map(item => item.type === \"extra\"?\n                        <Button className='bt bt-Itemsmenu' Name={item.Name} Price={item.Price} onClick ={() => addOrder(item)} />:false \n                    )}</div> \n                    <div class=\"additional flex\">{menu.map(item => item.type === \"additional\"?\n                        <Button className='bt bt-Itemsmenu' Name={item.Name} Price={item.Price} onClick ={() => addOrder(item)} />:false \n                    )}</div> \n                    <div class=\"sandwich flex\">{menu.map(item => item.type === \"sandwich\"?\n                        <Button className='bt bt-Itemsmenu' Name={item.Name} Price={item.Price} onClick ={() => addOrder(item)} />:false \n                    )}</div> \n\n                </div>\n                </div>\n        \n                <>\n                    <div className='box-order'>\n                        <h3>Dados do Pedido</h3>\n                        <Input placeholder='Nome do Cliente' className='input-data name-data' value={Name} onChange={(e)=> setName(e.target.value)}/>\n                        <Input placeholder='Nº da mesa' value={table} className='input-data table-data' onChange={(e)=> setTable(e.target.value)}/>\n                        {order.map(item => \n                            <>\n                                <div className='order'>{item.Name} - qtde: {item.quantity}\n                                    <Button className = 'btn-del'title = '🗑' onClick = {() => deletOrder(item)} /> \n                                </div>    \n                            </>\n                        )} \n                        <h3>Total: R$ {total},00</h3>\n                        <Button Name ='Enviar' className='bt-enviar' onClick ={sendOrder} />\n                    </div>\n                </>\n            </main>\n        </>\n    )                \n}\n\nexport default Restaurant;","import React from'react';\n\nconst Logo = (props) => {\n    return (\n        <img src = 'logo.png' className={props.className}/>\n    )\n}\n\nexport default Logo","import React from 'react';\nimport { Link } from 'react-router-dom';\n  import '../App.css';\n  import Logo from './logo'; \n\nfunction Nav(){\n    return(\n      <>\n        <div className='box-logo'>\n          <Logo className='logo'/>\n        </div>\n        <div className='csstabs' >\n        <nav className= 'main-nav'>\n          <ul className= 'main-menu'>\n            <li className='nav-restaurant'>\n              <Link to='/Restaurant' className='nav-restaurant'><h3>Restaurante</h3></Link>\n            </li>\n            <li className='nav-kitchen'>\n              <Link to='/Kitchen' className='nav-kitchen'><h3>Cozinha</h3></Link>\n            </li>\n          </ul>\n        </nav>\n        </div>\n        </>\n    )\n}\n\nexport default Nav;","import '../App.css';\nimport React, { useState, useEffect} from 'react';\nimport firebase from'../firebase';\nimport Button from '../components/button';\n\nfunction Order() {\n\n  const [data, setData] = useState([]);\n  const [processing, setProcessing]= useState([]);\n\n  const pending = data.filter(item=>item.status==='Pendente')\n  const done = data.filter(item => item.status==='Pronto');\n  const received = data.filter(item => item.status==='Entregue');\n\n  useEffect(()=>{\n    firebase.firestore().collection('orders')\n    .onSnapshot((snapshot)=> {\n        const order = snapshot.docs.map((doc)=>({\n            id:doc.id,\n            ...doc.data()            \n        }))\n        setData(order)\n    })\n  },[])\n\n  const updateStatus = (item, newStatus, statusFilter)=>{\n    firebase.firestore().collection('orders')\n    .doc(item.id)\n    .update({status: newStatus})\n    \n\n    const orders = data.map(elem => {\n      if(elem === item){\n        elem.status = newStatus\n        return elem;\n      } else {\n        return elem;\n      }\n    })\n\n    const status = orders.filter(item=>item.status=== statusFilter)\n    setProcessing([...status])\n  }\n\n  return ( \n    <>\n      <main className='data-order'>\n        <div className='bt-menuStatus'>\n          <Button Name='Pendente' className='bt-kitchen' onClick={()=> setProcessing ([...pending])} />\n          <Button Name='Pronto' className='bt-kitchen' onClick={()=>  setProcessing([...done])} />\n          <Button Name='Entregue' className='bt-kitchen' onClick={()=> setProcessing([...received])} />\n        </div>\n        <div className='box-cards'>\n          {processing.map(item =>     \n            <div className='card-item'>\n              <div className='divisor'>\n                <p><b>{item.Name}<hr/> Mesa: {item.table}</b></p> \n              </div>               \n              {item.order.map(elem =>                            \n                <>\n                  <p><b>{elem.quantity}</b> x {elem.Name} </p> \n                </>\n              )} \n              {item.status === 'Pendente' ?  <Button className='bt-status' Name='Pronto' onClick={()=> updateStatus(item, 'Pronto', 'Pendente')}/> : false}\n              {item.status === 'Pronto' ?  <Button className='bt-status' Name='Entregue' onClick={()=> updateStatus(item, 'Entregue', 'Pronto')}/> : false}\n            </div>                                                 \n          )}         \n        </div>\n      </main>      \n    </>\n  )\n}\nexport default Order;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Restaurant from './pages/Restaurant';\nimport Nav from './components/Nav';\nimport Order from './pages/Kitchen'\n\nfunction App() {\n  return (\n    <Router>\n      <header>\n        <Nav />             \n      </header>\n      <Switch>\n        <Route path=\"/Kitchen\">\n          <Order />\n        </Route>\n        <Route path=\"/\">\n          <Restaurant />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}